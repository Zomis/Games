[versions]
archunit = "1.0.0"
aws = "1.11.1031"
caffeine = "2.9.1"
coroutines = "1.7.3"
jupiter = "5.7.1"
jackson = "2.13.1"
djl = "0.3.0"
java-websocket = "1.5.2"
jcommander = "1.81"
ktor = "2.2.4"
klog = "2.0.5"
decompose = "2.1.2"
hikari = "3.4.5"
postgres = "42.2.20"
log4j = "2.18.0"
# steamworks4j WAS "1.10.0-SNAPSHOT", but had problems resolving that.
steamworks4j = "1.9.0"
mxnet-nativeAuto = "1.6.0"
turbine = "1.0.0"
truth = "1.1.3"

[libraries]
# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-core-js = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-js", version.ref = "coroutines" }
coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Jupiter
jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }

# KLog
klog-js = { module = "com.github.lewik.klog:klog-js", version.ref = "klog" }
klog-common = { module = "com.github.lewik.klog:klog", version.ref = "klog" }
klog-jvm = { module = "com.github.lewik.klog:klog-jvm", version.ref = "klog" }

# Server-specific
archUnit = { module = "com.tngtech.archunit:archunit-junit5", version.ref = "archunit" }
aws-dynamodb = { module = "com.amazonaws:aws-java-sdk-dynamodb", version.ref = "aws" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
java-websocket = { module = "org.java-websocket:Java-WebSocket", version.ref = "java-websocket" }
jcommander = { module = "com.beust:jcommander", version.ref = "jcommander" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version.ref = "log4j" }
postgres = { module = "org.postgresql:postgresql", version.ref = "postgres" }
steamworks4j-server = { module = "com.code-disaster.steamworks4j:steamworks4j-server", version.ref = "steamworks4j" }

# DJL
djl-mxnet-nativeAuto = { module = "ai.djl.mxnet:mxnet-native-auto", version.ref = "mxnet-nativeAuto" }
djl-mxnet-engine = { module = "ai.djl.mxnet:mxnet-engine", version.ref = "djl" }
djl-model-zoo = { module = "ai.djl:model-zoo", version.ref = "djl" }
djl-api = { module = "ai.djl:api", version.ref = "djl" }

# Jackson
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

# Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decompose" }

# Ktor
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }

ktor-jvm-server-http-redirect = { module = "io.ktor:ktor-server-http-redirect-jvm", version.ref = "ktor" }
ktor-jvm-server = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-jvm-server-websockets = { module = "io.ktor:ktor-server-websockets-jvm", version.ref = "ktor" }
ktor-jvm-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm", version.ref = "ktor" }
ktor-jvm-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson-jvm", version.ref = "ktor" }
ktor-jvm-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-jvm-server-default-headers = { module = "io.ktor:ktor-server-default-headers-jvm", version.ref = "ktor" }
ktor-jvm-server-cors = { module = "io.ktor:ktor-server-cors-jvm", version.ref = "ktor" }
ktor-jvm-server-compression = { module = "io.ktor:ktor-server-compression-jvm", version.ref = "ktor" }
ktor-jvm-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }

# Other
steamworks4j = { module = "com.code-disaster.steamworks4j:steamworks4j", version.ref = "steamworks4j" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
